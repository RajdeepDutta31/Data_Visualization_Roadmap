import pandas as pd
import matplotlib.pyplot as plt      # importing modules
import seaborn as sns

file_path = "C:/...input/mydata.csv"    # CSV filepath  #to do
file_data = pd.read_csv(file_path, index_col = "SNo")   # read the csv file

file_data = file_data.head()   #-------> gives us the first 5 rows(default)
file_data = file_data.head(n)   #-------> gives us the first n rows

file_data = file_data.tail()   #-------> gives us the last 5 rows(default)
file_data = file_data.tail(n)  #-------> gives us the last n rows
print(file_data) 

plt.figure(figsize=(8,6))  #plt window

sns.set_style("dark")        #------> for dark theme

    ''' Available themes are.....
            "darkgrid"
            "whitegrid"
            "dark"
            "white"
            "ticks"
    '''

#LinePlot ->
sns.lineplot(data = file_data)

#BarPlot ->
sns.barplot(x=file_data.index , y=file_data["column_name"])

#Heatmap ->
sns.heatmap(data = file_data , annot = True)
                                                # Annot=True put the values in the cells
                        
#ScatterPlot ->
sns.scatterplot(x = file_data["column_name"], y =file_data["column_name"], hue = file_data["column_name"])
                                                # hue gives the color code
                                                
#RegPlot ->
sns.regplot(x=file_data["column_name"], y=file_data["column_name"])
                                                # Regression Line Plot

#Lmplot ->
sns.lmplot(x="column_name", y="column_name", hue="column_name", data=file_data)

#Categorical ScatterPlot ->
sns.swarmplot(x=file_data["column_name"], y=file_data["column_name"])

#Histogram ->
sns.distplot(a=file_data['column_name'], kde =False)
                                                # kde = True gives the KDE curve
#Kernal Density Estimate ->
sns.kdeplot(data=file_data["column_name"] , shade=True)
                                                # shade = True, colours the bounded part
#2D KDE plot ->
sns.jointplot(x=file_data["column_name"], y=file_data["column_name"], kind = "kde")
                                                #kind = kde



#plt.legend()     -----Force legend (i'e labels) to appear
plt.show()
